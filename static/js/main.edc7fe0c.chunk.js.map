{"version":3,"sources":["routes.ts","utils/i18n.ts","components/tickets/steps/select-path.tsx","components/header/index.tsx","components/home/images/London.jpg","components/home/images/Kyiv.jpg","components/home/images/Minsk.jpg","components/home/images/NewYork.jpg","components/home/index.tsx","components/about/images/about.jpg","components/about/index.tsx","redux/reducers/allTickets.ts","utils/date.helpers.ts","components/myTickets/index.tsx","utils/download.helpers.ts","redux/reducers/ticket.ts","components/tickets/steps/summary.tsx","components/tickets/steps/select-passengers.tsx","components/tickets/steps/select-date.tsx","components/tickets/steps/index.ts","components/tickets/steps/select-flight.tsx","api/index.ts","components/tickets/index.tsx","App.tsx","redux/index.ts","index.tsx"],"names":["ticketsPath","myTicketsPath","aboutPath","languages","i18n","use","Backend","initReactI18next","init","fallbackLng","debug","react","useSuspense","CountrySelectorType","HeaderLink","text","route","navigate","useNavigate","type","shape","size","onClick","Header","useTranslation","t","languagesOptions","value","label","className","language","options","onChange","arg","changeLanguage","HomePage","images","src","LondonImg","country","KyivImg","MinskImg","NewYorkImg","autoplay","effect","map","image","title","alt","About","AboutImg","addTicket","createAction","createReducer","state","action","push","id","length","payload","getDateFromTimestamp","timestamp","date","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","Button","saveTicketBtn","record","data","blob","Blob","JSON","stringify","a","document","createElement","download","href","window","URL","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","exportToJson","showDate","columns","dataIndex","key","render","passengers","adult","childrens","infants","showPassengers","MyTickets","dispatch","useDispatch","tickets","useSelector","store","allTickets","dataSource","fileReader","FileReader","input","click","onchange","e","readAsText","target","files","onload","parse","result","uploadJson","ticket","setFrom","setDestination","setDepartureDate","setReturnDate","setPassengers","clearTicket","from","to","departureDate","returnDate","Summary","passengersType","Option","Select","CountrySelector","values","countries","placeholder","From","setTravelRoute","name","common","SelectPath","setCurrentStep","currentStep","isEmptyForm","To","disabled","PeopleCounter","labels","setPeopleCounter","peopleCounter","index","decreaseCounter","increaseCounter","SelectPassengers","SelectDate","showTime","format","minuteStep","unix","steps","setIsRoundTrip","isRoundTrip","Group","defaultValue","getCountries","fetch","response","json","Step","Steps","Tickets","useState","setCountries","useEffect","then","catch","err","alert","stepProps","current","stepContent","App","path","element","rootReducers","combineReducers","ticketReducer","allTicketsReducer","configureStore","reducer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edc7fe0c.chunk.js","sourcesContent":["export const homePath = \"/\";\nexport const ticketsPath = \"/tickets\";\nexport const myTicketsPath = \"/mytickets\";\nexport const aboutPath = \"/about\";\n","import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport { initReactI18next } from \"react-i18next\";\n\nexport const languages = { en: \"en\", ru: \"ru\" };\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    debug: false,\n    react: {\n      useSuspense: false,\n    },\n  });\n\nexport default i18n;\n","import { Select, Button } from \"antd\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { ITicket } from \"../../../models/ticket_interfaces\";\nimport { setDestination, setFrom } from \"../../../redux/reducers/ticket\";\nimport \"./steps.scss\";\n\ninterface ICountrySelector {\n  values: Array<string>;\n  countries: Array<Object>;\n}\n\ninterface ISelectPathProps {\n  setCurrentStep: React.Dispatch<React.SetStateAction<number>>;\n  currentStep: number;\n  countries: Array<Object>;\n  ticket: ITicket;\n}\n\nenum CountrySelectorType {\n  From = \"From\",\n  To = \"To\",\n}\n\nconst { Option } = Select;\n\nconst SelectPath = ({\n  setCurrentStep,\n  currentStep,\n  countries,\n  ticket,\n}: ISelectPathProps) => {\n  const { t } = useTranslation();\n\n  const isEmptyForm = ticket.from && ticket.to ? false : true;\n\n  return (\n    <div className=\"step__wrapper\">\n      <div className=\"step__container\">\n        <CountrySelector\n          values={[CountrySelectorType.From, CountrySelectorType.To]}\n          countries={countries}\n        />\n      </div>\n      <div className=\"step__submit\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={() => setCurrentStep(currentStep + 1)}\n          disabled={isEmptyForm}\n        >\n          {t(\"common.submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst CountrySelector = ({ values, countries }: ICountrySelector) => {\n  const dispatch = useDispatch();\n\n  const setTravelRoute = (country: string, value: string) => {\n    if (value === CountrySelectorType.From) dispatch(setFrom(country));\n    else dispatch(setDestination(country));\n  };\n\n  return (\n    <>\n      {values.map((value) => (\n        <Select\n          placeholder={value}\n          size=\"large\"\n          className=\"step__selector\"\n          onChange={(country: string) => setTravelRoute(country, value)}\n        >\n          {countries.map((country: any) => (\n            <Option value={country.name.common}>{country.name.common}</Option>\n          ))}\n        </Select>\n      ))}\n    </>\n  );\n};\n\nexport default SelectPath;\n","import { Button } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { aboutPath, homePath, myTicketsPath, ticketsPath } from \"../../routes\";\nimport Dropdown from \"react-dropdown\";\nimport \"./header.scss\";\nimport \"react-dropdown/style.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { languages } from \"../../utils/i18n\";\n\ninterface IHeaderLink {\n  text: string;\n  route: string;\n}\n\nconst Header = () => {\n  const { t, i18n } = useTranslation();\n\n  const languagesOptions = [\n    { value: languages.en, label: t(\"header.english\") },\n    { value: languages.ru, label: t(\"header.russian\") },\n  ];\n\n  return (\n    <div className=\"header__wrapper\">\n      <div className=\"header__links\">\n        <HeaderLink text={t(\"header.home\")} route={homePath} />\n        <HeaderLink text={t(\"header.tickets\")} route={ticketsPath} />\n        <HeaderLink text={t(\"header.myTickets\")} route={myTicketsPath} />\n        <HeaderLink text={t(\"header.about\")} route={aboutPath} />\n      </div>\n      <div>\n        <Dropdown\n          value={i18n.language}\n          options={languagesOptions}\n          onChange={(arg) => i18n.changeLanguage(arg.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst HeaderLink = ({ text, route }: IHeaderLink) => {\n  const navigate = useNavigate();\n\n  return (\n    <Button\n      type=\"primary\"\n      shape=\"round\"\n      size=\"large\"\n      onClick={() => navigate(route)}\n    >\n      {text}\n    </Button>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/London.9ae5bae1.jpg\";","export default __webpack_public_path__ + \"static/media/Kyiv.55384f49.jpg\";","export default __webpack_public_path__ + \"static/media/Minsk.87938b76.jpg\";","export default __webpack_public_path__ + \"static/media/NewYork.36da7b1a.jpg\";","import \"./home.scss\";\nimport { Carousel } from \"antd\";\nimport LondonImg from \"./images/London.jpg\";\nimport KyivImg from \"./images/Kyiv.jpg\";\nimport MinskImg from \"./images/Minsk.jpg\";\nimport NewYorkImg from \"./images/NewYork.jpg\";\n\nconst HomePage = () => {\n  const images = [\n    { src: LondonImg, country: \"Great Britain\" },\n    { src: KyivImg, country: \"Ukraine\" },\n    { src: MinskImg, country: \"Belarus\" },\n    { src: NewYorkImg, country: \"USA\" },\n  ];\n  \n  return (\n    <div className=\"home__wrapper\">\n      <Carousel className=\"home__carousel\" autoplay effect=\"fade\">\n        {images.map((image) => (\n          <div className=\"home__carouselItem\">\n            <img src={image.src} title={image.country} alt={image.country} />\n          </div>\n        ))}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/about.4d4a9cbe.jpg\";","import { useTranslation } from \"react-i18next\";\nimport \"./about.scss\";\nimport AboutImg from \"./images/about.jpg\";\n\nconst About = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"about__wrapper\">\n      <div className=\"about__content\">\n        <div className=\"about__description\">\n          <h1>{t(\"about.title\")}</h1>\n          <p>{t(\"about.description\")}</p>\n        </div>\n        <div className=\"about__image\">\n          <img src={AboutImg} alt={t(\"about.belavia\")} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nconst initialState: any[] = [];\n\nexport const addTicket = createAction<Object>(\"ADD_TICKET\");\n\nexport default createReducer(initialState, {\n  [addTicket.type]: function (state: any, action) {\n    state.push({ id: state.length, ...action.payload });\n  },\n});\n","export const getDateFromTimestamp = (timestamp: number) => {\n  const date = new Date(timestamp * 1000);\n\n  const day = date.getDate();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n\n  return `${day}.${month}.${year} ${hours}:${minutes}`;\n};\n","import { Button as ButtonBase, Table } from \"antd\";\nimport { TFunction, useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IPeopleCounter } from \"../../models/ticket_interfaces\";\nimport { addTicket } from \"../../redux/reducers/allTickets\";\nimport { getDateFromTimestamp } from \"../../utils/date.helpers\";\nimport { exportToJson, uploadJson } from \"../../utils/download.helpers\";\nimport \"./myTickets.scss\";\n\ninterface IButton {\n  text: string;\n  onClick: (e: any) => void;\n}\n\nconst MyTickets = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const tickets: Array<Object> = useSelector((store: any) => store.allTickets);\n\n  const uploadTickets = () => {\n    uploadJson((ticket: Array<Object>) => {\n      dispatch(addTicket(ticket));\n    });\n  };\n\n  return (\n    <div className=\"mytickets__wrapper\">\n      <div className=\"mytickets__table\">\n        <Table dataSource={tickets} columns={columns(t)} />\n      </div>\n      <div className=\"mytickets__btnWrapper\">\n        <div className=\"mytickets__btnBlock\">\n          <Button text={t(\"myTickets.uploadJSON\")} onClick={uploadTickets} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Button = ({ text, onClick }: IButton) => (\n  <ButtonBase type=\"primary\" onClick={onClick}>\n    {text}\n  </ButtonBase>\n);\n\nconst saveTicketBtn = (record: Object, t: TFunction) => (\n  <Button text={t(\"myTickets.saveJSON\")} onClick={() => exportToJson(record)} />\n);\n\nconst showPassengers = (passengers: IPeopleCounter, t: TFunction) =>\n  `${t(\"myTickets.adult\") + passengers.adult} ${\n    t(\"myTickets.childrens\") + passengers.childrens\n  } ${t(\"myTickets.infants\") + passengers.infants}`;\n\nconst showDate = (timestamp: number | undefined) =>\n  timestamp ? getDateFromTimestamp(timestamp) : null;\n\nconst columns = (t: TFunction) => [\n  {\n    title: t(\"myTickets.id\"),\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: t(\"common.from\"),\n    dataIndex: \"from\",\n    key: \"from\",\n  },\n  {\n    title: t(\"common.to\"),\n    dataIndex: \"to\",\n    key: \"to\",\n  },\n  {\n    title: t(\"myTickets.departureDate\"),\n    dataIndex: \"departureDate\",\n    key: \"departureDate\",\n    render: showDate,\n  },\n  {\n    title: t(\"myTickets.returnDate\"),\n    dataIndex: \"returnDate\",\n    key: \"returnDate\",\n    render: showDate,\n  },\n  {\n    title: t(\"myTickets.passengers\"),\n    dataIndex: \"passengers\",\n    key: \"passengers\",\n    render: (passengers: IPeopleCounter) => showPassengers(passengers, t),\n  },\n  {\n    title: t(\"myTickets.actions\"),\n    dataIndex: \"action\",\n    key: \"action\",\n    render: (value: any, record: Object) => saveTicketBtn(record, t),\n  },\n];\n\nexport default MyTickets;\n","export const exportToJson = (data: any) => {\n  const blob = new Blob([JSON.stringify(data)], { type: \"text/json\" });\n  const a = document.createElement(\"a\");\n\n  a.download = \"ticket.json\";\n  a.href = window.URL.createObjectURL(blob);\n\n  const clickEvt = new MouseEvent(\"click\", {\n    view: window,\n    bubbles: true,\n    cancelable: true,\n  });\n\n  a.dispatchEvent(clickEvt);\n\n  a.remove();\n};\n\nexport const uploadJson = (data: any) => {\n  const fileReader = new FileReader();\n  const input = document.createElement(\"input\");\n\n  input.type = \"file\";\n  input.click();\n\n  input.onchange = (e: any) => {\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = (e: any) => {\n      data(JSON.parse(e.target.result));\n    };\n  };\n\n  input.remove();\n};\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { IPeopleCounter } from \"../../models/ticket_interfaces\";\n\nconst initialState = {};\n\nexport const setFrom = createAction<string>(\"SET_FROM\");\nexport const setDestination = createAction<string>(\"SET_DESTINATION\");\nexport const setDepartureDate = createAction<number | null>(\"SET_DEPARTURE_DATE\");\nexport const setReturnDate = createAction<number | null>(\"SET_RETURN_DATE\");\nexport const setPassengers = createAction<IPeopleCounter>(\"SET_PASSENGERS\");\nexport const clearTicket = createAction<undefined>(\"CLEAR_TICKET\");\n\nexport default createReducer(initialState, {\n  [setFrom.type]: function (state: any, action) {\n    state.from = action.payload;\n  },\n  [setDestination.type]: function (state: any, action) {\n    state.to = action.payload;\n  },\n  [setDepartureDate.type]: function (state: any, action) {\n    state.departureDate = action.payload;\n  },\n  [setReturnDate.type]: function (state: any, action) {\n    state.returnDate = action.payload;\n  },\n  [setPassengers.type]: function (state: any, action) {\n    state.passengers = action.payload;\n  },\n  [clearTicket.type]: function (state: any, action) {\n    delete state.from;\n    delete state.to;\n    delete state.departureDate;\n    delete state.returnDate;\n    delete state.passengers;\n  },\n});\n","import { Card, Button } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { NavigateFunction } from \"react-router-dom\";\nimport { ITicket } from \"../../../models/ticket_interfaces\";\nimport { addTicket } from \"../../../redux/reducers/allTickets\";\nimport { clearTicket } from \"../../../redux/reducers/ticket\";\nimport { myTicketsPath } from \"../../../routes\";\nimport { getDateFromTimestamp } from \"../../../utils/date.helpers\";\nimport \"./steps.scss\";\n\ninterface ISummaryProps {\n  setCurrentStep: React.Dispatch<React.SetStateAction<number>>;\n  currentStep: number;\n  ticket: ITicket;\n  navigate: NavigateFunction;\n}\n\nconst Summary = ({ ticket, navigate }: ISummaryProps) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const buyTicket = () => {\n    dispatch(addTicket(ticket));\n    dispatch(clearTicket());\n\n    navigate(myTicketsPath);\n  };\n\n  return (\n    <div className=\"step__summaryContainer\">\n      <Card\n        className=\"step__summaryCard\"\n        title={t(\"tickets.summary\")}\n        type=\"inner\"\n      >\n        <p>{t(\"common.from\") + \": \" + ticket.from}</p>\n        <p>{t(\"common.to\") + \": \" + ticket.to}</p>\n        <p>\n          {t(\"tickets.departureAt\") +\n            getDateFromTimestamp(ticket.departureDate)}\n        </p>\n        <p>\n          {ticket.returnDate\n            ? t(\"tickets.returnAt\") + getDateFromTimestamp(ticket.returnDate)\n            : null}\n        </p>\n        <span>{t(\"tickets.passengers\")}</span>\n        <ul>\n          <li>{t(\"tickets.adult\") + ticket?.passengers.adult}</li>\n          <li>{t(\"tickets.childrens\") + ticket?.passengers.childrens}</li>\n          <li>{t(\"tickets.infants\") + ticket?.passengers.infants}</li>\n        </ul>\n        <div className=\"step__submitWrapper\">\n          <div className=\"step__submit\">\n            <Button type=\"primary\" size=\"large\" onClick={buyTicket}>\n              {t(\"tickets.buy\")}\n            </Button>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Summary;\n","import { Button } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { IPeopleCounter } from \"../../../models/ticket_interfaces\";\nimport { setPassengers } from \"../../../redux/reducers/ticket\";\nimport \"./steps.scss\";\n\ninterface ISelectPassengersProps {\n  setCurrentStep: React.Dispatch<React.SetStateAction<number>>;\n  currentStep: number;\n  setPeopleCounter: React.Dispatch<React.SetStateAction<any>>;\n  peopleCounter: IPeopleCounter;\n}\n\ninterface IPeopleCounterProps {\n  labels: string[];\n  setPeopleCounter: React.Dispatch<React.SetStateAction<any>>;\n  peopleCounter: any;\n}\n\nenum passengersType {\n  adult,\n  childrens,\n  infants,\n}\n\nconst SelectPassengers = ({\n  setCurrentStep,\n  currentStep,\n  setPeopleCounter,\n  peopleCounter,\n}: ISelectPassengersProps) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const isEmptyForm =\n    peopleCounter.adult === 0 &&\n    peopleCounter.childrens === 0 &&\n    peopleCounter.infants === 0;\n\n  const savePassengersNumber = () => {\n    setCurrentStep(currentStep + 1);\n\n    dispatch(setPassengers(peopleCounter));\n  };\n\n  return (\n    <div className=\"step__wrapper\">\n      <div className=\"step__container\">\n        <div>\n          <PeopleCounter\n            labels={[\n              t(\"tickets.adult\"),\n              t(\"tickets.childrens\"),\n              t(\"tickets.infants\"),\n            ]}\n            setPeopleCounter={setPeopleCounter}\n            peopleCounter={peopleCounter}\n          />\n        </div>\n      </div>\n      <div className=\"step__submit\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={savePassengersNumber}\n          disabled={isEmptyForm}\n        >\n          {t(\"common.submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst PeopleCounter = ({\n  labels,\n  setPeopleCounter,\n  peopleCounter,\n}: IPeopleCounterProps) => {\n  const increaseCounter = (index: number) =>\n    setPeopleCounter({\n      ...peopleCounter,\n      [passengersType[index]]: peopleCounter[passengersType[index]] + 1,\n    });\n\n  const decreaseCounter = (index: number) => {\n    setPeopleCounter({\n      ...peopleCounter,\n      [passengersType[index]]:\n        peopleCounter[passengersType[index]] <= 0\n          ? 0\n          : peopleCounter[passengersType[index]] - 1,\n    });\n  };\n\n  return (\n    <div>\n      {labels.map((label: string, index: number) => (\n        <div className=\"step__peopleCounter\">\n          <h2>{label}</h2>\n          <div className=\"step__counterBtn\">\n            <Button shape=\"circle\" onClick={() => decreaseCounter(index)}>\n              -\n            </Button>\n            <span>{peopleCounter[passengersType[index]]}</span>\n            <Button shape=\"circle\" onClick={() => increaseCounter(index)}>\n              +\n            </Button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SelectPassengers;\n","import { DatePicker, Button } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { Moment } from \"moment\";\nimport \"./steps.scss\";\nimport { setDepartureDate } from \"../../../redux/reducers/ticket\";\nimport { useTranslation } from \"react-i18next\";\nimport { ITicket } from \"../../../models/ticket_interfaces\";\n\ninterface ISelectDateProps {\n  setCurrentStep: React.Dispatch<React.SetStateAction<number>>;\n  currentStep: number;\n  ticket: ITicket;\n}\n\nconst dateFormat = \"DD.MM.YYYY HH:mm\";\n\nconst SelectDate = ({ setCurrentStep, currentStep, ticket }: ISelectDateProps) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const isEmptyForm = ticket.departureDate ? false : true;\n\n  const setDate = (date: Moment | null) => {\n    dispatch(setDepartureDate(date?.unix() || null));\n  };\n\n  return (\n    <div className=\"step__wrapper\">\n      <div className=\"step__container\">\n        <DatePicker\n          showTime\n          size=\"large\"\n          format={dateFormat}\n          minuteStep={15}\n          className=\"step__selector\"\n          onChange={setDate}\n        />\n      </div>\n      <div className=\"step__submit\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={() => setCurrentStep(currentStep + 1)}\n          disabled={isEmptyForm}\n        >\n          {t(\"common.submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectDate;\n","import Summary from \"./summary\";\nimport SelectPath from \"./select-path\";\nimport SelectPassengers from \"./select-passengers\";\nimport SelectDate from \"./select-date\";\nimport SelectFlight from \"./select-flight\";\n\nconst steps = [SelectPath, SelectDate, SelectFlight, SelectPassengers, Summary];\n\nexport default steps;\n","import { DatePicker, Radio, Button } from \"antd\";\nimport { Moment } from \"moment\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { ITicket } from \"../../../models/ticket_interfaces\";\nimport { setReturnDate } from \"../../../redux/reducers/ticket\";\nimport \"./steps.scss\";\n\ninterface ISelectFlightProps {\n  setCurrentStep: React.Dispatch<React.SetStateAction<number>>;\n  currentStep: number;\n  setIsRoundTrip: React.Dispatch<React.SetStateAction<number>>;\n  isRoundTrip: number;\n  ticket: ITicket;\n}\n\nconst dateFormat = \"DD.MM.YYYY HH:mm\";\n\nconst SelectFlight = ({\n  setCurrentStep,\n  currentStep,\n  setIsRoundTrip,\n  isRoundTrip,\n  ticket\n}: ISelectFlightProps) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const isEmptyForm = ticket.returnDate ? false : true; \n\n  const setDate = (date: Moment | null) => {\n    dispatch(setReturnDate(date?.unix() || null));\n  };\n\n  return (\n    <div className=\"step__wrapper\">\n      <Radio.Group\n        className=\"step__radio\"\n        defaultValue={1}\n        onChange={(e) => setIsRoundTrip(e.target.value)}\n      >\n        <Radio value={1}>{t(\"tickets.roundTrip\")}</Radio>\n        <Radio value={0}>{t(\"tickets.oneWay\")}</Radio>\n      </Radio.Group>\n      <div className=\"step__container\">\n        {isRoundTrip ? (\n          <div>\n            <h2 className=\"step__header\">{t(\"tickets.selectDate\")}</h2>\n            <DatePicker\n              showTime\n              size=\"large\"\n              format={dateFormat}\n              minuteStep={15}\n              className=\"step__selector\"\n              onChange={setDate}\n            />\n          </div>\n        ) : null}\n      </div>\n      <div className=\"step__submit\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={() => setCurrentStep(currentStep + 1)}\n          disabled={isEmptyForm && !!isRoundTrip}\n        >\n          {t(\"common.submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectFlight;\n","export const getCountries = async () => {\n  const response = await fetch(\"https://restcountries.com/v3.1/all\");\n  \n  return await response.json();\n};\n","import \"./tickets.scss\";\nimport { Steps } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport stepContent from \"./steps\";\nimport { IPeopleCounter, ITicket } from \"../../models/ticket_interfaces\";\nimport { getCountries } from \"../../api\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Step } = Steps;\n\nconst Tickets = () => {\n  const { t } = useTranslation();\n\n  const ticket: ITicket = useSelector((store: any) => store.ticket);\n\n  const navigate = useNavigate();\n\n  const [countries, setCountries] = useState<Array<Object>>([]);\n  const [currentStep, setCurrentStep] = useState<number>(0);\n  const [isRoundTrip, setIsRoundTrip] = useState<number>(1);\n  const [peopleCounter, setPeopleCounter] = useState<IPeopleCounter>({\n    adult: 0,\n    childrens: 0,\n    infants: 0,\n  });\n\n  useEffect(() => {\n    getCountries()\n      .then((countries) => setCountries(countries))\n      .catch((err) => alert(err));\n  }, []);\n\n  const stepProps = {\n    setCurrentStep: setCurrentStep,\n    currentStep: currentStep,\n    setIsRoundTrip: setIsRoundTrip,\n    isRoundTrip: isRoundTrip,\n    setPeopleCounter: setPeopleCounter,\n    peopleCounter: peopleCounter,\n    countries: countries,\n    ticket: ticket,\n    navigate: navigate,\n  };\n\n  return (\n    <div className=\"tickets__wrapper\">\n      <div className=\"tickets__container\">\n        <Steps current={currentStep}>\n          <Step title={t(\"steps.firstStep\")} />\n          <Step title={t(\"steps.secondStep\")} />\n          <Step title={t(\"steps.thirdStep\")} />\n          <Step title={t(\"steps.fourthStep\")} />\n          <Step title={t(\"steps.fifthStep\")} />\n        </Steps>\n        {stepContent[currentStep](stepProps)}\n      </div>\n    </div>\n  );\n};\n\nexport default Tickets;\n","import { Routes, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport {\n  Header,\n  AboutPage,\n  HomePage,\n  TicketsPage,\n  MyTicketsPage,\n} from \"./components\";\nimport { aboutPath, homePath, myTicketsPath, ticketsPath } from \"./routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"main\">\n        <Routes>\n          <Route path={homePath} element={<HomePage />} />\n          <Route path={aboutPath} element={<AboutPage />} />\n          <Route path={ticketsPath} element={<TicketsPage />} />\n          <Route path={myTicketsPath} element={<MyTicketsPage />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport ticketReducer from './reducers/ticket';\nimport allTicketsReducer from './reducers/allTickets'\n\nconst rootReducers = combineReducers({\n  ticket: ticketReducer,\n  allTickets: allTicketsReducer\n});\n\nconst store = configureStore({\n  reducer: rootReducers,\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './redux'\nimport './utils/i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}